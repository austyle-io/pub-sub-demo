---
description:
globs:
alwaysApply: true
---
# Function Style

Rules for function declarations, arrow functions, and return statement patterns.

## Rules

-   **Always prefer arrow functions except when `this` access is needed**
-   Use function declarations only when you need access to `this` context
-   Consider using a class if you frequently need `this` context
-   Explicit return statements for multi-line functions
-   Implicit returns for single-line functions

## Examples

```typescript
// Preferred - single line implicit return
const getName = (user: User) => user?.name ?? "Unknown";

// Preferred - multi-line explicit return
const processUser = (user: User) => {
    const validated = validateUser(user);
    return validated ? user : defaultUser;
};

// Not preferred - function declaration
function handleClick(event: MouseEvent) {
    // implementation
}

// Preferred - arrow function
const handleClick = (event: MouseEvent) => {
    // implementation
};
```

## When to Use Classes

If you need `this` context, consider using a class:

```typescript
class UserManager {
    private users: User[] = [];

    addUser = (user: User) => {
        this.users.push(user);
    };

    getUserCount = () => this.users.length;
}
```
