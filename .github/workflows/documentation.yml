name: Documentation Quality

on:
  pull_request:
    paths:
      - '**.ts'
      - '**.tsx'
      - 'docs-site/**'
      - '.github/workflows/documentation.yml'
  push:
    branches: [main]

jobs:
  check-documentation:
    name: Check Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Run documentation analysis
        id: doc-check
        run: |
          node docs-site/scripts/analyze-codebase.js
          node docs-site/scripts/check-documentation.js
        
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: documentation-coverage
          path: docs-site/documentation-coverage-report.json
          
      - name: Comment PR with documentation status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('docs-site/documentation-coverage-report.json', 'utf8'));
            
            const comment = `## ðŸ“š Documentation Coverage Report
            
            **Overall Coverage**: ${report.statistics.coveragePercentage.toFixed(1)}%
            
            ### Statistics
            - Total Exports: ${report.statistics.totalExports}
            - Documented: ${report.statistics.documentedExports}
            - Undocumented: ${report.undocumented.length}
            
            ### Top Priority Items
            ${report.undocumented.slice(0, 5).map(item => 
              `- \`${item.module}\` - **${item.name}** (${item.kind})`
            ).join('\n')}
            
            <details>
            <summary>View all undocumented items</summary>
            
            ${report.undocumented.map(item => 
              `- \`${item.module}\` - **${item.name}** (${item.kind})`
            ).join('\n')}
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Fail if below threshold
        run: |
          COVERAGE=$(node -p "JSON.parse(require('fs').readFileSync('docs-site/documentation-coverage-report.json', 'utf8')).statistics.coveragePercentage")
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Documentation coverage is below 80% threshold: $COVERAGE%"
            exit 1
          fi

  generate-docs:
    name: Generate API Documentation
    runs-on: ubuntu-latest
    needs: check-documentation
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Generate API documentation
        run: pnpm run docs:generate
        
      - name: Build documentation site
        run: pnpm run docs:build
        
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs-site/dist
          cname: docs.collab-edit.example.com